version: '3'

x-common-log-config: &default_config
  restart: always
  networks:
    - dm_cluster_dev-batch
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

x-common-healthcheck-default: &default_healthcheck
  timeout: 45s
  interval: 10s
  retries: 10
  start_period: 10s


#################################################################
################    DEFINIÇÃO DOS SERVIÇOS    ###################
#################################################################

services:

  # APACHE HADOOP SERVICES
  namenode:
    image: marcoaureliomenezes/dm-hadoop-namenode:1.0.0
    container_name: namenode
    <<: *default_config
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode_dev-vol:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: marcoaureliomenezes/dm-hadoop-datanode:1.0.0
    container_name: datanode
    <<: *default_config
    ports:
      - 9864:9864
    volumes:
      - hadoop_datanode_dev-vol:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: marcoaureliomenezes/dm-hadoop-resourcemanager:1.0.0
    container_name: resourcemanager
    <<: *default_config
    ports:
      - 18088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager:
    image: marcoaureliomenezes/dm-hadoop-nodemanager:1.0.0
    container_name: nodemanager
    <<: *default_config
    ports:
      - 18042:8042
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver:
    image: marcoaureliomenezes/dm-hadoop-historyserver:1.0.0
    container_name: historyserver
    <<: *default_config
    ports:
      - 19888:8188
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver_dev-vol:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env


  # APACHE HIVE SERVICES AND HUE
  hive-metastore:
    image: marcoaureliomenezes/dm-hive-base:1.0.0
    container_name: hive-metastore
    <<: *default_config
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 postgres:5432"
    ports:
      - "9083:9083"
    healthcheck:
      test: [ "CMD", "nc", "-z", "hive-metastore", "9083" ]
      <<: *default_healthcheck
    env_file:
      - ./hadoop-hive.env

  hive-server:
    image: marcoaureliomenezes/dm-hive-base:1.0.0
    container_name: hive-server
    <<: *default_config
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://postgres:5432/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    healthcheck:
      test: [ "CMD", "nc", "-z", "hive-metastore", "9083" ]
      <<: *default_healthcheck
    env_file:
      - ./hadoop-hive.env

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    <<: *default_config

  postgres:
    image: marcoaureliomenezes/dm-postgres:1.0.0
    container_name: postgres
    <<: *default_config
    volumes:
      - postgres_hive_hue_dev-vol:/var/lib/postgresql/data

  hue-webui:
    image: marcoaureliomenezes/dm-hue-webui:1.0.0
    container_name: hue-webui
    <<: *default_config
    ports:
      - "32762:8888"
    volumes:
      - ../../mnt/hue/hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
    environment:
      SERVICE_PRECONDITION: "hive-server:10000 postgres:5432"
    healthcheck:
      test: [ "CMD", "nc", "-z", "hue-webui", "8888" ]
      <<: *default_healthcheck


  # APACHE SPARK SERVICES
  spark-master:
    image: marcoaureliomenezes/dm-spark-master:1.0.0
    restart: always
    networks:
      - dm_cluster_dev-batch
      - dm_cluster_dev-fast
    container_name: spark-master
    ports:
      - "18080:8082"
    healthcheck:
      test: [ "CMD", "nc", "-z", "spark-master", "8082" ]
      <<: *default_healthcheck

  spark-worker:
    image: marcoaureliomenezes/dm-spark-worker:1.0.0
    container_name: spark-worker
    restart: always
    networks:
      - dm_cluster_dev-batch
      - dm_cluster_dev-fast
    depends_on:
      - spark-master
    healthcheck:
      test: [ "CMD", "nc", "-z", "spark-worker", "8081" ]
      <<: *default_healthcheck


  # APACHE AIRFLOW SERVICES
  airflow:
    image: marcoaureliomenezes/dm-apache-airflow:1.0.0
    container_name: airflow
    <<: *default_config
    volumes:
      - ../../mnt/airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - ../../mnt/airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      <<: *default_healthcheck
    depends_on:
      - postgres

  postgres_airflow:
    image: postgres:11.4-alpine
    container_name: postgres_airflow
    <<: *default_config
    volumes:
      - postgres_airflow_dev-vol:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test:
        ["CMD", "pg_isready", "-q", "-d", "airflow_db", "-U", "airflow"]
      <<: *default_healthcheck

volumes:
  hadoop_namenode_dev-vol:
  hadoop_datanode_dev-vol:
  hadoop_historyserver_dev-vol:
  postgres_hive_hue_dev-vol:
  postgres_airflow_dev-vol:


networks:
  dm_cluster_dev-batch:
    name: dm_cluster_dev-batch
  dm_cluster_dev-fast:
    name: dm_cluster_dev-fast