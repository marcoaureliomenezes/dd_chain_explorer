
x-common-log-config: &default_config
  networks:
    - ice_lakehouse_dev

x-common-healthcheck-default: &default_healthcheck
  timeout: 45s
  interval: 10s
  retries: 10
  start_period: 10s


services:

  notebook:
    build: ../../docker/customized/jupyterlab
    container_name: notebook
    <<: *default_config
    env_file:
      - ./conf/spark_str_bronze_multiplex.conf
      - ./conf/.secrets.conf
    volumes:
      - ../../mnt/jupyterlab:/app/notebooks
    ports:
      - 8888:8888
    environment:
      NESSIE_URI: http://nessie:19120/api/v1
      MINIO_HOST: http://minio:9000


  spark-master:
    build: ../../docker/customized/spark
    container_name: spark-master
    <<: *default_config
    env_file:
      - ./conf/spark_str_bronze_multiplex.conf
      - ./conf/.secrets.conf
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_METRICS_MASTER_ENABLED=true
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '18080:8080'
    healthcheck:
      test: [ "CMD", "ls" ]
      <<: *default_healthcheck


  spark-worker:
    build: ../../docker/customized/spark
    <<: *default_config
    container_name: spark-worker
    env_file:
      - ./conf/spark_str_bronze_multiplex.conf
      - ./conf/.secrets.conf
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=4
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    healthcheck:
      test: [ "CMD", "ls" ]
      <<: *default_healthcheck

  # python_job:
  #   build: ../../docker/app_layer/onchain-batch-txs
  #   container_name: onchain-batch-txs
  #   <<: *default_config
  #   env_file:
  #     - ./conf/spark_str_bronze_multiplex.conf
  #     - ./conf/.secrets.conf
  #     - ./conf/batch_py.conf
  #   volumes:
  #     - ../../docker/app_layer/onchain-batch-txs/src:/app

    

  # trino:
  #   image: trinodb/trino
  #   container_name: trino
  #   <<: *default_config
  #   environment:
  #     - DISCOVERY_SERVER_ENABLED=true
  #     - HTTP_PORT=8080
  #   volumes:
  #     - ../mnt/trino/conf:/etc/trino/catalog
  #   ports:
  #     - "28080:8080"

networks:
  ice_lakehouse_dev:
    name: ice_lakehouse_dev